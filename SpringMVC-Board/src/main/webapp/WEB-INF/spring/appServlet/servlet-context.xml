<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 반드시 webapp/resources폴더 이용 -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/images/**"
		location="/WEB-INF/views/images/" />
	<resources mapping="/css/**" location="/WEB-INF/views/css/" />
	<resources mapping="/js/**" location="/WEB-INF/views/js/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.board.cha" />
	<!-- Spring JNDI :: DBCP -->
	<!-- <beans:bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="jdbc/myOracle" />
		<beans:property name="resourceRef" value="true" />
	</beans:bean> -->
	<!-- 로그를 출력하기 위해서 DriverSpy 이용해서 jdbc설정:Connection이 1개 존재 -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<beans:property name="driverClassName"
	value="net.sf.log4jdbc.DriverSpy"/>
	<beans:property name="url"
	value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"/>
	<beans:property name="username" value="icia"/>
	<beans:property name="password" value="1111"/>
	</beans:bean>
	<!-- sqlSessionFactory :: mybatis가 사용 -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:com/board/cha/dao/mybatis-conf.xml" />
		<beans:property name="mapperLocations"
			value="classpath:com/**/mapper/*.xml" />
		<!--WEB-INF에 설정시 -->
		<!-- 
		<beans:property name="configLocation"
			 value="/WEB-INF/mybatis/mybatis-conf.xml" />
		<beans:property name="mapperLocations"
			value="/WEB-INF/mybatis/mapper/*.xml"/>
		 -->
		<!-- src/main/resources에 설정시 classpath로 설정1 
			<beans:property name="configLocation" 
				value="classpath:/mybatis-config.xml" />
			<beans:property name="mapperLocations" 
				value="classpath:/mapper/*.xml" /> -->

		<!-- 설정2 
			<beans:property	name="configLocation"
				value="/resources/mybatis/mybatis-config.xml" />
			<beans:property	name="mapperLocations"
				value="/resources/mybatis/mapper/*.xml" /> -->
	</beans:bean>
	
	<!-- DAO using -->
	<beans:bean id="mDao"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property name="mapperInterface"
			value="com.board.cha.dao.IMemberDao" />		
	</beans:bean>
	
	<beans:bean id="bDao"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory"
			ref="sqlSessionFactory" />
		<beans:property name="mapperInterface"
			value="com.board.cha.dao.IBoardDao" />		
	</beans:bean>

</beans:beans> 